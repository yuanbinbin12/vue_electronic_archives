{"ast":null,"code":"import LayerTree from './LayerTree.vue';\nimport { mapMutations, mapState } from 'vuex';\nimport $ from 'jquery';\nexport default {\n  name: 'CabinetTree',\n  components: {\n    LayerTree\n  },\n  computed: {\n    ...mapState(\"grounding\", [\"CabinetArr\"])\n  },\n  methods: {\n    ...mapMutations(\"grounding\", [\"clearCabinetArr\"]),\n    setPageSize() {\n      var width = $(\".jointParent\").width() + 100;\n      var userSeeWidth = $(\".resize\").width();\n      if (width > userSeeWidth) {\n        $(\".resize\").css({\n          width: width + \"px\"\n        });\n      } else {\n        $(\".resize\").css({\n          width: \"100%\"\n        });\n      }\n    }\n  },\n  mounted() {\n    this.setPageSize();\n  },\n  updated() {\n    this.setPageSize();\n  },\n  //通过路由规则，离开该组件被调用\n  beforeRouteLeave(to, from, next) {\n    this.clearCabinetArr();\n    next();\n  }\n};","map":{"version":3,"names":["LayerTree","mapMutations","mapState","$","name","components","computed","methods","setPageSize","width","userSeeWidth","css","mounted","updated","beforeRouteLeave","to","from","next","clearCabinetArr"],"sources":["src/components/CabinetTree.vue"],"sourcesContent":["<template>\r\n    <div class=\"CabinetTree\" style=\"position: relative; top: 40px; width: 100%; white-space: nowrap;display: inline-block;\">\r\n        \r\n        <LayerTree v-for=\"(boxArr,index) in CabinetArr\" :boxArr=\"boxArr\" :XAxis=\"index\">\r\n            <span>{{ \"第\"+(index+1)+\"层\" }}</span>\r\n        </LayerTree>\r\n    </div>\r\n</template>\r\n<script>\r\nimport LayerTree from './LayerTree.vue';\r\nimport {mapMutations, mapState} from 'vuex';\r\nimport $ from 'jquery';\r\nexport default {\r\n    name: 'CabinetTree',\r\n    components:{\r\n        LayerTree\r\n    },\r\n    computed:{\r\n        ...mapState(\"grounding\",[\"CabinetArr\"])\r\n    },\r\n    methods:{\r\n        ...mapMutations(\"grounding\",[\"clearCabinetArr\"]),\r\n        setPageSize(){\r\n            var width = $(\".jointParent\").width()+100;\r\n            var userSeeWidth = $(\".resize\").width();\r\n            if(width>userSeeWidth){\r\n                $(\".resize\").css({\r\n                width:width+\"px\"\r\n            })\r\n            } else{\r\n                $(\".resize\").css({\r\n                width:\"100%\"\r\n            })  \r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.setPageSize();\r\n    },\r\n    updated(){\r\n        this.setPageSize();\r\n    },\r\n    //通过路由规则，离开该组件被调用\r\n    beforeRouteLeave(to,from,next){\r\n        this.clearCabinetArr();\r\n        next();\r\n    }  \r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"mappings":"AASA,OAAAA,SAAA;AACA,SAAAC,YAAA,EAAAC,QAAA;AACA,OAAAC,CAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAL;EACA;EACAM,QAAA;IACA,GAAAJ,QAAA;EACA;EACAK,OAAA;IACA,GAAAN,YAAA;IACAO,YAAA;MACA,IAAAC,KAAA,GAAAN,CAAA,iBAAAM,KAAA;MACA,IAAAC,YAAA,GAAAP,CAAA,YAAAM,KAAA;MACA,IAAAA,KAAA,GAAAC,YAAA;QACAP,CAAA,YAAAQ,GAAA;UACAF,KAAA,EAAAA,KAAA;QACA;MACA;QACAN,CAAA,YAAAQ,GAAA;UACAF,KAAA;QACA;MACA;IACA;EACA;EACAG,QAAA;IACA,KAAAJ,WAAA;EACA;EACAK,QAAA;IACA,KAAAL,WAAA;EACA;EACA;EACAM,iBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IACA,KAAAC,eAAA;IACAD,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}