{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      isHoverShow: false,\n      styleTopLeft: {\n        \"top\": \"0px\",\n        \"left\": \"0px\"\n      },\n      scroll: 0\n    };\n  },\n  name: 'BoxTree',\n  props: [\"boxKey\", \"positionArr\"],\n  computed: {\n    ...mapState([\"changeBoxId\"]),\n    lightClass() {\n      if (this.boxKey.fguid === this.changeBoxId) {\n        return \"boxing isChange\";\n      }\n      if (this.boxKey.dataId && this.boxKey.dataId !== \"\" && this.boxKey.dataId !== null) {\n        return \"boxing lighted\";\n      } else {\n        return \"boxing\";\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"setBoxid\"]),\n    BoxingClick() {\n      if (this.boxKey.dataId && this.boxKey.dataId !== null && this.boxKey.dataId !== \"\") {\n        // window.parent.parent.openReactForm(\n        //     {\n        //         id: this.boxKey,\n        //         caption: '标题',\n        //         serverID: 'serverID', // 不需要可不传\n        //         config: {\n        //             displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\n        //             forms: 'EA_BOXING',\n        //             OBJ_GUID:this.boxKey.dataId\n        //         }\n        //     }\n        // )\n      } else {\n        this.setBoxid({\n          \"boxId\": localStorage.getItem(\"BoxingId\"),\n          \"fileBag\": this.boxKey.fguid,\n          \"positionArr\": this.positionArr\n        });\n      }\n    },\n    boxMouseOver() {\n      this.isHoverShow = true;\n      document.onmousemove = event => {\n        var x = event.clientX - 346;\n        var y = event.clientY - 220;\n        this.styleTopLeft[\"left\"] = x + \"px\";\n        this.styleTopLeft[\"top\"] = y + \"px\";\n      };\n    },\n    boxMouseOut() {\n      this.isHoverShow = false;\n      document.onmousemove = () => {\n        return null;\n      };\n    }\n  },\n  mounted() {\n    window.addEventListener('scroll', this.scroll);\n  },\n  scroll() {\n    // 获取元素距页面顶部的距离\n    let domHeight = document.querySelector(\"#phoenix_dom_detailpagebanner\").offsetTop;\n    // 获取屏幕滚动高度\n    let scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n    // 获取屏幕可视区域高度\n    let clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    if (scrollTop + clientHeight >= domHeight) {\n      if (this.baseData && this.baseData.cardData && this.from) {\n        // 展现埋点\n        this.bury('bannershow');\n        window.removeEventListener('scroll', this.scroll);\n        console.log(this.scroll);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapState","data","isHoverShow","styleTopLeft","scroll","name","props","computed","lightClass","boxKey","fguid","changeBoxId","dataId","methods","BoxingClick","setBoxid","localStorage","getItem","positionArr","boxMouseOver","document","onmousemove","event","x","clientX","y","clientY","boxMouseOut","mounted","window","addEventListener","domHeight","querySelector","offsetTop","scrollTop","pageYOffset","documentElement","body","clientHeight","innerHeight","baseData","cardData","from","bury","removeEventListener","console","log"],"sources":["src/components/BoxTree.vue"],"sourcesContent":["<template>\r\n    <div class=\"boxOut\">\r\n        <div :class=\"lightClass\" @click=\"BoxingClick\" @mouseover=\"boxMouseOver()\" @mouseout=\"boxMouseOut()\"></div>\r\n        <div class=\"hover-text\" id=\"hover-text\" v-show=\"isHoverShow\"    ref=\"hover-text\" :style=\"styleTopLeft\">{{ \"第\"+(positionArr[0]+1)+\"层，第\"+(positionArr[1]+1)+\"格\" }}</div>\r\n        <div></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapState} from 'vuex';\r\nexport default {\r\n    data(){\r\n        return{\r\n            isHoverShow:false,\r\n            styleTopLeft:{\r\n                \"top\":\"0px\",\r\n                \"left\":\"0px\"\r\n            },\r\n            scroll:0\r\n        }\r\n    },\r\n    name: 'BoxTree',\r\n    props:[\"boxKey\",\"positionArr\"],\r\n    computed:{\r\n        ...mapState([\"changeBoxId\"]),\r\n        lightClass(){\r\n            if(this.boxKey.fguid === this.changeBoxId){\r\n                return \"boxing isChange\";\r\n            }\r\n            if(this.boxKey.dataId&&this.boxKey.dataId!==\"\"&&this.boxKey.dataId!==null){\r\n                return \"boxing lighted\";\r\n            }else{\r\n                return \"boxing\";\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions([\"setBoxid\"]),\r\n        BoxingClick(){\r\n            if(this.boxKey.dataId&&this.boxKey.dataId!==null && this.boxKey.dataId!==\"\"){\r\n                // window.parent.parent.openReactForm(\r\n                //     {\r\n                //         id: this.boxKey,\r\n                //         caption: '标题',\r\n                //         serverID: 'serverID', // 不需要可不传\r\n                //         config: {\r\n                //             displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\r\n                //             forms: 'EA_BOXING',\r\n                //             OBJ_GUID:this.boxKey.dataId\r\n                //         }\r\n                //     }\r\n                // )\r\n            } else {\r\n                this.setBoxid({\r\n                    \"boxId\":localStorage.getItem(\"BoxingId\"),\"fileBag\":this.boxKey.fguid,\"positionArr\":this.positionArr\r\n                });\r\n            } \r\n        },\r\n        boxMouseOver(){\r\n            this.isHoverShow = true;\r\n            document.onmousemove=event=>{\r\n                var x=event.clientX - 346;\r\n\t\t\t    var y=event.clientY - 220;\r\n\t\t\t\tthis.styleTopLeft[\"left\"] = x+\"px\";\r\n                this.styleTopLeft[\"top\"] = y+\"px\";\r\n            }\r\n        },\r\n        boxMouseOut(){\r\n            this.isHoverShow = false;\r\n            document.onmousemove=()=>{\r\n                return null;\r\n            }\r\n        }\r\n        \r\n    },\r\n    mounted(){\r\n        window.addEventListener('scroll', this.scroll);\r\n   },\r\n    scroll() { \r\n\t // 获取元素距页面顶部的距离\r\n     let domHeight = document.querySelector(\"#phoenix_dom_detailpagebanner\").offsetTop;\r\n     // 获取屏幕滚动高度\r\n     let scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\r\n     // 获取屏幕可视区域高度\r\n     let clientHeight = document.documentElement.clientHeight || window.innerHeight;\r\n     if (scrollTop + clientHeight >= domHeight) {\r\n         if (this.baseData && this.baseData.cardData && this.from) {\r\n             // 展现埋点\r\n             this.bury('bannershow');\r\n             window.removeEventListener('scroll', this.scroll);\r\n             console.log(this.scroll)\r\n         }\r\n     }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.boxing {\r\n    width: 30px;\r\n    height: 80px;\r\n    border: 1px solid #999999;\r\n    margin-left: 20px;\r\n    margin-top: 0px;\r\n}\r\n.boxOut{\r\n    display: inline-block;\r\n}\r\n.boxing:hover{\r\n    cursor: pointer;\r\n}\r\n.lighted{\r\n    background-color: rgb(127, 208, 255);\r\n}\r\n.isChange{\r\n    background-color: rgb(180, 241, 10)!important;\r\n}\r\n.hover-text {\r\n  position: absolute;\r\n  padding: 8px;\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>"],"mappings":"AASA,SAAAA,UAAA,EAAAC,QAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,YAAA;QACA;QACA;MACA;MACAC,MAAA;IACA;EACA;EACAC,IAAA;EACAC,KAAA;EACAC,QAAA;IACA,GAAAP,QAAA;IACAQ,WAAA;MACA,SAAAC,MAAA,CAAAC,KAAA,UAAAC,WAAA;QACA;MACA;MACA,SAAAF,MAAA,CAAAG,MAAA,SAAAH,MAAA,CAAAG,MAAA,gBAAAH,MAAA,CAAAG,MAAA;QACA;MACA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACA,GAAAd,UAAA;IACAe,YAAA;MACA,SAAAL,MAAA,CAAAG,MAAA,SAAAH,MAAA,CAAAG,MAAA,kBAAAH,MAAA,CAAAG,MAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA;QACA,KAAAG,QAAA;UACA,SAAAC,YAAA,CAAAC,OAAA;UAAA,gBAAAR,MAAA,CAAAC,KAAA;UAAA,oBAAAQ;QACA;MACA;IACA;IACAC,aAAA;MACA,KAAAjB,WAAA;MACAkB,QAAA,CAAAC,WAAA,GAAAC,KAAA;QACA,IAAAC,CAAA,GAAAD,KAAA,CAAAE,OAAA;QACA,IAAAC,CAAA,GAAAH,KAAA,CAAAI,OAAA;QACA,KAAAvB,YAAA,WAAAoB,CAAA;QACA,KAAApB,YAAA,UAAAsB,CAAA;MACA;IACA;IACAE,YAAA;MACA,KAAAzB,WAAA;MACAkB,QAAA,CAAAC,WAAA;QACA;MACA;IACA;EAEA;EACAO,QAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAA1B,MAAA;EACA;EACAA,OAAA;IACA;IACA,IAAA2B,SAAA,GAAAX,QAAA,CAAAY,aAAA,kCAAAC,SAAA;IACA;IACA,IAAAC,SAAA,GAAAL,MAAA,CAAAM,WAAA,IAAAf,QAAA,CAAAgB,eAAA,CAAAF,SAAA,IAAAd,QAAA,CAAAiB,IAAA,CAAAH,SAAA;IACA;IACA,IAAAI,YAAA,GAAAlB,QAAA,CAAAgB,eAAA,CAAAE,YAAA,IAAAT,MAAA,CAAAU,WAAA;IACA,IAAAL,SAAA,GAAAI,YAAA,IAAAP,SAAA;MACA,SAAAS,QAAA,SAAAA,QAAA,CAAAC,QAAA,SAAAC,IAAA;QACA;QACA,KAAAC,IAAA;QACAd,MAAA,CAAAe,mBAAA,gBAAAxC,MAAA;QACAyC,OAAA,CAAAC,GAAA,MAAA1C,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}