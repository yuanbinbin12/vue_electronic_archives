{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nexport default {\n  namespaced: true,\n  mutations: {\n    setQRCodeIdArr(state, idArr) {\n      state.QRCodeIdArr = idArr;\n    },\n    setQrCodePictureArr(state, picture) {\n      state.QrCodePictureArr.push(picture);\n    },\n    clearQrCodePictureArr(state) {\n      while (state.QrCodePictureArr.pop()) {}\n    }\n  },\n  actions: {\n    getQRCodePictureArr(context, vc) {\n      context.commit(\"clearQrCodePictureArr\");\n      if (context.state.QRCodeIdArr === null || context.state.QRCodeIdArr === \"\" || context.state.QRCodeIdArr.length === 0) {\n        context.commit(\"grounding/setWarningMsg\", {\n          \"message\": \"请选择一条数据后再点击生成二维码！\",\n          \"type\": \"error\"\n        }, {\n          root: true\n        });\n        return;\n      }\n      var codeIdList = [];\n      context.state.QRCodeIdArr.forEach(codeIdMap => {\n        codeIdList.push(codeIdMap.repositoryId);\n      });\n      axios.get(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`, {\n        responseType: 'blob'\n      }).then(Response => {\n        const blob = new Blob([Response.data], {\n          type: Response.data.type\n        });\n        const imageUrl = URL.createObjectURL(blob);\n        context.commit(\"setQrCodePictureArr\", imageUrl);\n      });\n    }\n  },\n  state: {\n    QRCodeIdArr: [],\n    QrCodePictureArr: []\n  }\n};","map":{"version":3,"names":["axios","namespaced","mutations","setQRCodeIdArr","state","idArr","QRCodeIdArr","setQrCodePictureArr","picture","QrCodePictureArr","push","clearQrCodePictureArr","pop","actions","getQRCodePictureArr","context","vc","commit","length","root","codeIdList","forEach","codeIdMap","repositoryId","get","join","responseType","then","Response","blob","Blob","data","type","imageUrl","URL","createObjectURL"],"sources":["C:/Users/ainizuofurong/Desktop/vue_electronic_archives/src/store/QRcode.js"],"sourcesContent":["import axios from \"axios\";\r\nexport default {\r\n    namespaced:true,\r\n    mutations:{\r\n        setQRCodeIdArr(state,idArr){\r\n            state.QRCodeIdArr = idArr;\r\n        },\r\n        setQrCodePictureArr(state,picture){\r\n            state.QrCodePictureArr.push(picture);\r\n        },\r\n        clearQrCodePictureArr(state){\r\n            while(state.QrCodePictureArr.pop()){}\r\n        }\r\n    },\r\n    actions:{\r\n       getQRCodePictureArr(context,vc){\r\n        context.commit(\"clearQrCodePictureArr\");\r\n        if(context.state.QRCodeIdArr===null || context.state.QRCodeIdArr === \"\" || context.state.QRCodeIdArr.length===0){\r\n            context.commit(\"grounding/setWarningMsg\",{\"message\":\"请选择一条数据后再点击生成二维码！\",\"type\":\"error\"},{root:true});\r\n            return;\r\n        }\r\n        var codeIdList = [];\r\n        context.state.QRCodeIdArr.forEach(codeIdMap => {\r\n            codeIdList.push(codeIdMap.repositoryId)\r\n        });\r\n        axios.get(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`,{\r\n            responseType: 'blob'\r\n        }).then(Response=>{\r\n                const blob = new Blob([Response.data], { type: Response.data.type });\r\n                const imageUrl = URL.createObjectURL(blob);\r\n                context.commit(\"setQrCodePictureArr\",imageUrl);\r\n        });\r\n        \r\n       }\r\n    },\r\n    state:{\r\n       QRCodeIdArr:[],\r\n       QrCodePictureArr:[]\r\n    }\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,eAAe;EACXC,UAAU,EAAC,IAAI;EACfC,SAAS,EAAC;IACNC,cAAcA,CAACC,KAAK,EAACC,KAAK,EAAC;MACvBD,KAAK,CAACE,WAAW,GAAGD,KAAK;IAC7B,CAAC;IACDE,mBAAmBA,CAACH,KAAK,EAACI,OAAO,EAAC;MAC9BJ,KAAK,CAACK,gBAAgB,CAACC,IAAI,CAACF,OAAO,CAAC;IACxC,CAAC;IACDG,qBAAqBA,CAACP,KAAK,EAAC;MACxB,OAAMA,KAAK,CAACK,gBAAgB,CAACG,GAAG,CAAC,CAAC,EAAC,CAAC;IACxC;EACJ,CAAC;EACDC,OAAO,EAAC;IACLC,mBAAmBA,CAACC,OAAO,EAACC,EAAE,EAAC;MAC9BD,OAAO,CAACE,MAAM,CAAC,uBAAuB,CAAC;MACvC,IAAGF,OAAO,CAACX,KAAK,CAACE,WAAW,KAAG,IAAI,IAAIS,OAAO,CAACX,KAAK,CAACE,WAAW,KAAK,EAAE,IAAIS,OAAO,CAACX,KAAK,CAACE,WAAW,CAACY,MAAM,KAAG,CAAC,EAAC;QAC5GH,OAAO,CAACE,MAAM,CAAC,yBAAyB,EAAC;UAAC,SAAS,EAAC,mBAAmB;UAAC,MAAM,EAAC;QAAO,CAAC,EAAC;UAACE,IAAI,EAAC;QAAI,CAAC,CAAC;QACpG;MACJ;MACA,IAAIC,UAAU,GAAG,EAAE;MACnBL,OAAO,CAACX,KAAK,CAACE,WAAW,CAACe,OAAO,CAACC,SAAS,IAAI;QAC3CF,UAAU,CAACV,IAAI,CAACY,SAAS,CAACC,YAAY,CAAC;MAC3C,CAAC,CAAC;MACFvB,KAAK,CAACwB,GAAG,CAAE,0CAAyCJ,UAAU,CAACK,IAAI,CAAC,GAAG,CAAE,EAAC,EAAC;QACvEC,YAAY,EAAE;MAClB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;QACV,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;UAAEC,IAAI,EAAEJ,QAAQ,CAACG,IAAI,CAACC;QAAK,CAAC,CAAC;QACpE,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;QAC1Cd,OAAO,CAACE,MAAM,CAAC,qBAAqB,EAACgB,QAAQ,CAAC;MACtD,CAAC,CAAC;IAEH;EACH,CAAC;EACD7B,KAAK,EAAC;IACHE,WAAW,EAAC,EAAE;IACdG,gBAAgB,EAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}