{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\n// import $ from \"jquery\";\nexport default {\n  namespaced: true,\n  mutations: {\n    setQRCodeIdArr(state, idArr) {\n      state.QRCodeIdArr = idArr;\n    },\n    setQrCodePictureArr(state, picture) {\n      state.QrCodePictureArr.push(picture);\n    },\n    clearQrCodePictureArr(state) {\n      if (state.QrCodePictureArr.length > 0) {\n        while (state.QrCodePictureArr.pop()) {}\n      }\n    },\n    clearQRCodeIdArr(state) {\n      if (state.QRCodeIdArr.length > 0) {\n        while (state.QRCodeIdArr.pop()) {}\n      }\n    },\n    sortQrCodePictureArr(state, length) {\n      var QrCodePictureArr = [];\n      if (length === state.QrCodePictureArr.length) {\n        for (let i = 1; i <= length; i++) {\n          for (let j = 0; j < length; j++) {\n            if (state.QrCodePictureArr[j].index === i) {\n              var QrCodePicture = state.QrCodePictureArr[j];\n              QrCodePictureArr.push({\n                index: QrCodePicture.index,\n                imageUrl: QrCodePicture.imageUrl,\n                height: QrCodePicture.imageUrl\n              });\n            }\n          }\n        }\n        while (state.QrCodePictureArr.pop()) {}\n        QrCodePictureArr.map(element => {\n          state.QrCodePictureArr.push(element);\n        });\n      }\n      console.log(QrCodePictureArr);\n    }\n  },\n  actions: {\n    getQRCodePictureArr(context, vc) {\n      context.commit(\"clearQrCodePictureArr\");\n      if (context.state.QRCodeIdArr === null || context.state.QRCodeIdArr === \"\" || context.state.QRCodeIdArr.length === 0) {\n        context.commit(\"grounding/setWarningMsg\", {\n          message: \"请选择一条数据后再点击生成二维码！\",\n          type: \"error\"\n        }, {\n          root: true\n        });\n        return;\n      }\n      var codeIdSum = 0;\n      var codeIdList = [];\n      var index = 0;\n      var codeIdListArr = [];\n      context.state.QRCodeIdArr.forEach(async codeIdMap => {\n        codeIdList.push(codeIdMap.cabinetName);\n        codeIdSum++;\n        if (codeIdSum % 4 === 0) {\n          index++;\n          if (codeIdList.length > 0) {\n            codeIdListArr.push(codeIdList);\n          }\n          codeIdList = [];\n          codeIdSum = 0;\n        }\n      });\n      if (codeIdList.length > 0) {\n        index++;\n        codeIdListArr.push(codeIdList);\n        codeIdList = [];\n      }\n      console.log(codeIdListArr);\n      codeIdListArr.map(async codeIdListnew => {\n        await getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdListnew.join(\",\")}`, codeIdListnew.length * 250, index);\n      });\n      if (vc.$route.name !== \"ImgPicture\") {\n        vc.$router.push({\n          name: \"ImgPicture\"\n        });\n        context.commit(\"clearQRCodeIdArr\");\n      }\n      function getAsyncAxios(url, height, index) {\n        var axiosRespone = axios.get(url, {\n          responseType: 'blob'\n        });\n        axiosRespone.then(Response => {\n          const blob = new Blob([Response.data], {\n            type: Response.data.type\n          });\n          const imageUrl = URL.createObjectURL(blob);\n          context.commit(\"setQrCodePictureArr\", {\n            imageUrl,\n            height,\n            index\n          });\n          context.commit(\"sortQrCodePictureArr\", Math.round(lengthQrId / 4));\n        });\n        // $.get({\n        //     url,\n        //     responseType:'blob',\n        //     async:false,\n        //     success(data){\n        //     const blob = new Blob([data], { type: \"image/png\" });\n        //     const imageUrl = URL.createObjectURL(blob);\n        //     context.commit(\"setQrCodePictureArr\",{imageUrl,height});\n        //     }\n        // })\n      }\n    }\n  },\n\n  state: {\n    QRCodeIdArr: [],\n    QrCodePictureArr: []\n  }\n};","map":{"version":3,"names":["axios","namespaced","mutations","setQRCodeIdArr","state","idArr","QRCodeIdArr","setQrCodePictureArr","picture","QrCodePictureArr","push","clearQrCodePictureArr","length","pop","clearQRCodeIdArr","sortQrCodePictureArr","i","j","index","QrCodePicture","imageUrl","height","map","element","console","log","actions","getQRCodePictureArr","context","vc","commit","message","type","root","codeIdSum","codeIdList","codeIdListArr","forEach","codeIdMap","cabinetName","codeIdListnew","getAsyncAxios","join","$route","name","$router","url","axiosRespone","get","responseType","then","Response","blob","Blob","data","URL","createObjectURL","Math","round","lengthQrId"],"sources":["C:/Users/ainizuofurong/Desktop/vue_electronic_archives/src/store/QRcode.js"],"sourcesContent":["import axios from \"axios\";\r\n// import $ from \"jquery\";\r\nexport default {\r\n    namespaced:true,\r\n    mutations:{\r\n        setQRCodeIdArr(state,idArr){\r\n            state.QRCodeIdArr = idArr;\r\n        },\r\n        setQrCodePictureArr(state,picture){\r\n            state.QrCodePictureArr.push(picture);\r\n        },\r\n        clearQrCodePictureArr(state){\r\n            if(state.QrCodePictureArr.length>0){\r\n                while(state.QrCodePictureArr.pop()){}\r\n            }\r\n        },\r\n        clearQRCodeIdArr(state){\r\n            if(state.QRCodeIdArr.length>0){\r\n                while(state.QRCodeIdArr.pop()){}\r\n            }\r\n        },\r\n        sortQrCodePictureArr(state,length){\r\n            var QrCodePictureArr = [];\r\n            if(length === state.QrCodePictureArr.length){\r\n                for(let i=1;i<=length;i++){\r\n                    for(let j = 0; j<length;j++){\r\n                        if( state.QrCodePictureArr[j].index === i){\r\n                            var QrCodePicture = state.QrCodePictureArr[j]\r\n                            QrCodePictureArr.push({\r\n                                index:QrCodePicture.index,\r\n                                imageUrl:QrCodePicture.imageUrl,\r\n                                height:QrCodePicture.imageUrl\r\n                            });\r\n                           }\r\n                    }\r\n                }\r\n                while(state.QrCodePictureArr.pop()){}\r\n                QrCodePictureArr.map((element=>{\r\n                    state.QrCodePictureArr.push(element)\r\n                }))\r\n            }\r\n            console.log(QrCodePictureArr);\r\n\r\n        }\r\n    },\r\n    actions:{\r\n        getQRCodePictureArr(context, vc) {\r\n            context.commit(\"clearQrCodePictureArr\");\r\n            if (\r\n              context.state.QRCodeIdArr === null ||\r\n              context.state.QRCodeIdArr === \"\" ||\r\n              context.state.QRCodeIdArr.length === 0\r\n            ) {\r\n              context.commit(\r\n                \"grounding/setWarningMsg\",\r\n                { message: \"请选择一条数据后再点击生成二维码！\", type: \"error\" },\r\n                { root: true }\r\n              );\r\n              return;\r\n            }\r\n            var codeIdSum = 0;\r\n            var codeIdList = [];\r\n            var index = 0;\r\n            var codeIdListArr = [];\r\n            context.state.QRCodeIdArr.forEach(async (codeIdMap) => {\r\n              codeIdList.push(codeIdMap.cabinetName);\r\n              codeIdSum++;\r\n              if (codeIdSum % 4 === 0) {\r\n                index++;\r\n                if (codeIdList.length > 0) {\r\n                    codeIdListArr.push(codeIdList);\r\n                }\r\n                codeIdList = [];\r\n                codeIdSum = 0;\r\n              }\r\n            });\r\n            if (codeIdList.length > 0) {\r\n              index++;\r\n              codeIdListArr.push(codeIdList);\r\n              codeIdList = [];\r\n            }\r\n            console.log(codeIdListArr)\r\n            codeIdListArr.map(async(codeIdListnew)=>{\r\n                await getAsyncAxios(\r\n                    `/OSPApplication/general/generateQRCode/${codeIdListnew.join(\",\")}`,\r\n                    codeIdListnew.length*250,\r\n                    index\r\n                  );\r\n            });\r\n            if (vc.$route.name !== \"ImgPicture\") {\r\n              vc.$router.push({ name: \"ImgPicture\" });\r\n              context.commit(\"clearQRCodeIdArr\");\r\n            }\r\n            function getAsyncAxios(url,height,index){\r\n                var axiosRespone = axios.get(url,{\r\n                    responseType: 'blob',\r\n                });\r\n                axiosRespone.then(Response=>{\r\n                    const blob = new Blob([Response.data], { type: Response.data.type });\r\n                    const imageUrl = URL.createObjectURL(blob);\r\n                    context.commit(\"setQrCodePictureArr\",{imageUrl,height,index});\r\n                context.commit(\"sortQrCodePictureArr\",Math.round(lengthQrId/4));\r\n                });\r\n        // $.get({\r\n        //     url,\r\n        //     responseType:'blob',\r\n        //     async:false,\r\n        //     success(data){\r\n        //     const blob = new Blob([data], { type: \"image/png\" });\r\n        //     const imageUrl = URL.createObjectURL(blob);\r\n        //     context.commit(\"setQrCodePictureArr\",{imageUrl,height});\r\n        //     }\r\n        // })\r\n        }\r\n       }\r\n    },\r\n    state:{\r\n       QRCodeIdArr:[],\r\n       QrCodePictureArr:[]\r\n    }\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,eAAe;EACXC,UAAU,EAAC,IAAI;EACfC,SAAS,EAAC;IACNC,cAAcA,CAACC,KAAK,EAACC,KAAK,EAAC;MACvBD,KAAK,CAACE,WAAW,GAAGD,KAAK;IAC7B,CAAC;IACDE,mBAAmBA,CAACH,KAAK,EAACI,OAAO,EAAC;MAC9BJ,KAAK,CAACK,gBAAgB,CAACC,IAAI,CAACF,OAAO,CAAC;IACxC,CAAC;IACDG,qBAAqBA,CAACP,KAAK,EAAC;MACxB,IAAGA,KAAK,CAACK,gBAAgB,CAACG,MAAM,GAAC,CAAC,EAAC;QAC/B,OAAMR,KAAK,CAACK,gBAAgB,CAACI,GAAG,CAAC,CAAC,EAAC,CAAC;MACxC;IACJ,CAAC;IACDC,gBAAgBA,CAACV,KAAK,EAAC;MACnB,IAAGA,KAAK,CAACE,WAAW,CAACM,MAAM,GAAC,CAAC,EAAC;QAC1B,OAAMR,KAAK,CAACE,WAAW,CAACO,GAAG,CAAC,CAAC,EAAC,CAAC;MACnC;IACJ,CAAC;IACDE,oBAAoBA,CAACX,KAAK,EAACQ,MAAM,EAAC;MAC9B,IAAIH,gBAAgB,GAAG,EAAE;MACzB,IAAGG,MAAM,KAAKR,KAAK,CAACK,gBAAgB,CAACG,MAAM,EAAC;QACxC,KAAI,IAAII,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEJ,MAAM,EAACI,CAAC,EAAE,EAAC;UACtB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACL,MAAM,EAACK,CAAC,EAAE,EAAC;YACxB,IAAIb,KAAK,CAACK,gBAAgB,CAACQ,CAAC,CAAC,CAACC,KAAK,KAAKF,CAAC,EAAC;cACtC,IAAIG,aAAa,GAAGf,KAAK,CAACK,gBAAgB,CAACQ,CAAC,CAAC;cAC7CR,gBAAgB,CAACC,IAAI,CAAC;gBAClBQ,KAAK,EAACC,aAAa,CAACD,KAAK;gBACzBE,QAAQ,EAACD,aAAa,CAACC,QAAQ;gBAC/BC,MAAM,EAACF,aAAa,CAACC;cACzB,CAAC,CAAC;YACH;UACP;QACJ;QACA,OAAMhB,KAAK,CAACK,gBAAgB,CAACI,GAAG,CAAC,CAAC,EAAC,CAAC;QACpCJ,gBAAgB,CAACa,GAAG,CAAEC,OAAO,IAAE;UAC3BnB,KAAK,CAACK,gBAAgB,CAACC,IAAI,CAACa,OAAO,CAAC;QACxC,CAAE,CAAC;MACP;MACAC,OAAO,CAACC,GAAG,CAAChB,gBAAgB,CAAC;IAEjC;EACJ,CAAC;EACDiB,OAAO,EAAC;IACJC,mBAAmBA,CAACC,OAAO,EAAEC,EAAE,EAAE;MAC7BD,OAAO,CAACE,MAAM,CAAC,uBAAuB,CAAC;MACvC,IACEF,OAAO,CAACxB,KAAK,CAACE,WAAW,KAAK,IAAI,IAClCsB,OAAO,CAACxB,KAAK,CAACE,WAAW,KAAK,EAAE,IAChCsB,OAAO,CAACxB,KAAK,CAACE,WAAW,CAACM,MAAM,KAAK,CAAC,EACtC;QACAgB,OAAO,CAACE,MAAM,CACZ,yBAAyB,EACzB;UAAEC,OAAO,EAAE,mBAAmB;UAAEC,IAAI,EAAE;QAAQ,CAAC,EAC/C;UAAEC,IAAI,EAAE;QAAK,CACf,CAAC;QACD;MACF;MACA,IAAIC,SAAS,GAAG,CAAC;MACjB,IAAIC,UAAU,GAAG,EAAE;MACnB,IAAIjB,KAAK,GAAG,CAAC;MACb,IAAIkB,aAAa,GAAG,EAAE;MACtBR,OAAO,CAACxB,KAAK,CAACE,WAAW,CAAC+B,OAAO,CAAC,MAAOC,SAAS,IAAK;QACrDH,UAAU,CAACzB,IAAI,CAAC4B,SAAS,CAACC,WAAW,CAAC;QACtCL,SAAS,EAAE;QACX,IAAIA,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE;UACvBhB,KAAK,EAAE;UACP,IAAIiB,UAAU,CAACvB,MAAM,GAAG,CAAC,EAAE;YACvBwB,aAAa,CAAC1B,IAAI,CAACyB,UAAU,CAAC;UAClC;UACAA,UAAU,GAAG,EAAE;UACfD,SAAS,GAAG,CAAC;QACf;MACF,CAAC,CAAC;MACF,IAAIC,UAAU,CAACvB,MAAM,GAAG,CAAC,EAAE;QACzBM,KAAK,EAAE;QACPkB,aAAa,CAAC1B,IAAI,CAACyB,UAAU,CAAC;QAC9BA,UAAU,GAAG,EAAE;MACjB;MACAX,OAAO,CAACC,GAAG,CAACW,aAAa,CAAC;MAC1BA,aAAa,CAACd,GAAG,CAAC,MAAMkB,aAAa,IAAG;QACpC,MAAMC,aAAa,CACd,0CAAyCD,aAAa,CAACE,IAAI,CAAC,GAAG,CAAE,EAAC,EACnEF,aAAa,CAAC5B,MAAM,GAAC,GAAG,EACxBM,KACF,CAAC;MACP,CAAC,CAAC;MACF,IAAIW,EAAE,CAACc,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;QACnCf,EAAE,CAACgB,OAAO,CAACnC,IAAI,CAAC;UAAEkC,IAAI,EAAE;QAAa,CAAC,CAAC;QACvChB,OAAO,CAACE,MAAM,CAAC,kBAAkB,CAAC;MACpC;MACA,SAASW,aAAaA,CAACK,GAAG,EAACzB,MAAM,EAACH,KAAK,EAAC;QACpC,IAAI6B,YAAY,GAAG/C,KAAK,CAACgD,GAAG,CAACF,GAAG,EAAC;UAC7BG,YAAY,EAAE;QAClB,CAAC,CAAC;QACFF,YAAY,CAACG,IAAI,CAACC,QAAQ,IAAE;UACxB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;YAAEtB,IAAI,EAAEmB,QAAQ,CAACG,IAAI,CAACtB;UAAK,CAAC,CAAC;UACpE,MAAMZ,QAAQ,GAAGmC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;UAC1CxB,OAAO,CAACE,MAAM,CAAC,qBAAqB,EAAC;YAACV,QAAQ;YAACC,MAAM;YAACH;UAAK,CAAC,CAAC;UACjEU,OAAO,CAACE,MAAM,CAAC,sBAAsB,EAAC2B,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACD;EACH,CAAC;;EACDvD,KAAK,EAAC;IACHE,WAAW,EAAC,EAAE;IACdG,gBAAgB,EAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}