{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nimport Vue from 'vue';\nimport $ from 'jquery';\nVue.forceUpdate();\nexport default {\n  data() {\n    return {\n      isHoverShow: false,\n      styleTopLeft: {\n        \"top\": \"0px\",\n        \"left\": \"0px\"\n      },\n      scrollX: 0,\n      scrollY: 0\n    };\n  },\n  name: 'BoxTree',\n  props: [\"boxKey\", \"positionArr\"],\n  computed: {\n    ...mapState([\"changeBoxList\"]),\n    lightClass() {\n      console.log(this.changeBoxList);\n      if (this.changeBoxList.has(this.boxKey[\"fguid\"])) {\n        return \"boxing isChange\";\n      }\n      if (this.boxKey[\"dataId\"] && this.boxKey[\"dataId\"][\"dataId\"] !== \"\" && this.boxKey[\"dataId\"] !== null) {\n        return \"boxing lighted\";\n      } else {\n        return \"boxing\";\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"setBoxid\"]),\n    BoxingClick() {\n      if (this.$route.name === \"grouping\") {\n        if (this.boxKey[\"dataId\"] && this.boxKey[\"dataId\"] !== null && this.boxKey[\"dataId\"] !== \"\") {\n          // window.parent.parent.openReactForm(\n          //     {\n          //         id: this.boxKey,\n          //         caption: '标题',\n          //         serverID: 'serverID', // 不需要可不传\n          //         config: {\n          //             displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\n          //             forms: 'EA_BOXING',\n          //             OBJ_GUID:this.boxKey.dataId\n          //         }\n          //     }\n          // )\n        } else {\n          this.setBoxid({\n            \"boxId\": localStorage.getItem(\"BoxingId\"),\n            \"fileBag\": this.boxKey[\"fguid\"],\n            \"positionArr\": this.positionArr\n          });\n        }\n      }\n    },\n    boxMouseOver() {\n      this.isHoverShow = true;\n      document.onmousemove = event => {\n        var offset = $(\".CabinetTree\").offset();\n        var width = $(\".hover-text\").width();\n        var x = event.clientX + this.scrollY - offset.left - width - 15;\n        var y = event.clientY + this.scrollX - offset.top + 10;\n        this.styleTopLeft[\"left\"] = x + \"px\";\n        this.styleTopLeft[\"top\"] = y + \"px\";\n      };\n    },\n    boxMouseOut() {\n      this.isHoverShow = false;\n      document.onmousemove = () => {\n        return null;\n      };\n    },\n    handleScroll() {\n      this.$nextTick(() => {\n        var top = document.body.scrollTop || document.documentElement.scrollTop || window.pageYOffset;\n        var left = document.body.scrollLeft || document.documentElement.scrollLeft || window.pageXOffset;\n        this.scrollX = top;\n        this.scrollY = left;\n      });\n    }\n  },\n  mounted() {\n    //可以在这里面直接进行滚动条的获取\n    window.addEventListener('scroll', this.handleScroll, true);\n  }\n};","map":{"version":3,"names":["mapActions","mapState","Vue","$","forceUpdate","data","isHoverShow","styleTopLeft","scrollX","scrollY","name","props","computed","lightClass","console","log","changeBoxList","has","boxKey","methods","BoxingClick","$route","setBoxid","localStorage","getItem","positionArr","boxMouseOver","document","onmousemove","event","offset","width","x","clientX","left","y","clientY","top","boxMouseOut","handleScroll","$nextTick","body","scrollTop","documentElement","window","pageYOffset","scrollLeft","pageXOffset","mounted","addEventListener"],"sources":["src/components/BoxTree.vue"],"sourcesContent":["<template>\r\n    <div class=\"boxOut\">\r\n        <div :class=\"lightClass\" @click=\"BoxingClick\" @mouseover=\"boxMouseOver()\" @mouseout=\"boxMouseOut()\"></div>\r\n        <div class=\"hover-text\" id=\"hover-text\" v-show=\"isHoverShow\"    ref=\"hover-text\" :style=\"styleTopLeft\">{{ boxKey[\"slotMc\"]===null || boxKey[\"slotMc\"]===\"\"?(positionArr[0]+1)+\"层-\"+(positionArr[1]+1)+\"节-\"+(positionArr[2]+1)+\"卡位\":boxKey[\"slotMc\"].split(\"柜-\")[1] }}</div>\r\n        <div></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapState} from 'vuex';\r\nimport Vue from 'vue';\r\nimport $ from 'jquery';\r\nVue.forceUpdate();\r\nexport default {\r\n    data(){\r\n        return{\r\n            isHoverShow:false,\r\n            styleTopLeft:{\r\n                \"top\":\"0px\",\r\n                \"left\":\"0px\"\r\n            },\r\n            scrollX:0,\r\n            scrollY:0\r\n        }\r\n    },\r\n    name: 'BoxTree',\r\n    props:[\"boxKey\",\"positionArr\"],\r\n    computed:{\r\n        ...mapState([\"changeBoxList\"]),\r\n        lightClass(){\r\n            console.log(this.changeBoxList);\r\n            if(this.changeBoxList.has(this.boxKey[\"fguid\"])){\r\n                return \"boxing isChange\";\r\n            }\r\n            if(this.boxKey[\"dataId\"]&&this.boxKey[\"dataId\"][\"dataId\"]!==\"\"&&this.boxKey[\"dataId\"]!==null){\r\n                return \"boxing lighted\";\r\n            }else{\r\n                return \"boxing\";\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions([\"setBoxid\"]),\r\n        BoxingClick(){\r\n            if(this.$route.name===\"grouping\"){\r\n                if(this.boxKey[\"dataId\"]&&this.boxKey[\"dataId\"]!==null && this.boxKey[\"dataId\"]!==\"\"){\r\n                // window.parent.parent.openReactForm(\r\n                //     {\r\n                //         id: this.boxKey,\r\n                //         caption: '标题',\r\n                //         serverID: 'serverID', // 不需要可不传\r\n                //         config: {\r\n                //             displayType: 'OpenTab', // 打开方式，默认为 OpenTab:应用新tab页; DrawerForm: 抽屉； BrowserTab：浏览器tab页； OpenWindow：弹窗\r\n                //             forms: 'EA_BOXING',\r\n                //             OBJ_GUID:this.boxKey.dataId\r\n                //         }\r\n                //     }\r\n                // )\r\n            } else {\r\n                this.setBoxid({\r\n                    \"boxId\":localStorage.getItem(\"BoxingId\"),\"fileBag\":this.boxKey[\"fguid\"],\"positionArr\":this.positionArr\r\n                });\r\n            } \r\n            }\r\n        },\r\n        boxMouseOver(){\r\n            this.isHoverShow = true;\r\n            document.onmousemove=event=>{\r\n                var offset = $(\".CabinetTree\").offset();\r\n                var width = $(\".hover-text\").width()\r\n                var x=event.clientX  + this.scrollY -  offset.left -width-15;\r\n\t\t\t    var y=event.clientY  +this.scrollX - offset.top +10;\r\n\t\t\t\tthis.styleTopLeft[\"left\"] = x+\"px\";\r\n                this.styleTopLeft[\"top\"] = y+\"px\";\r\n            }\r\n        },\r\n        boxMouseOut(){\r\n            this.isHoverShow = false;\r\n            document.onmousemove=()=>{\r\n                return null;\r\n            }\r\n        },\r\n        handleScroll() {\r\n        this.$nextTick(()=>{\r\n                var top = document.body.scrollTop || document.documentElement.scrollTop || window.pageYOffset;\r\n                var left = document.body.scrollLeft || document.documentElement.scrollLeft ||window.pageXOffset;\r\n                this.scrollX = top;\r\n                this.scrollY = left;\r\n            })\r\n}\r\n        \r\n    },\r\n    mounted() {//可以在这里面直接进行滚动条的获取\r\n\twindow.addEventListener('scroll', this.handleScroll, true)\r\n}\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.boxing {\r\n    width: 30px;\r\n    height: 80px;\r\n    border: 1px solid #999999;\r\n    margin-left: 20px;\r\n    margin-top: 0px;\r\n}\r\n.boxOut{\r\n    display: inline-block;\r\n}\r\n.boxing:hover{\r\n    cursor: pointer;\r\n}\r\n.lighted{\r\n    background-color: rgb(127, 208, 255);\r\n}\r\n.isChange{\r\n    background-color: rgb(180, 241, 10)!important;\r\n}\r\n.hover-text {\r\n  position: absolute;\r\n  padding: 8px;\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"AASA,SAAAA,UAAA,EAAAC,QAAA;AACA,OAAAC,GAAA;AACA,OAAAC,CAAA;AACAD,GAAA,CAAAE,WAAA;AACA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,YAAA;QACA;QACA;MACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,IAAA;EACAC,KAAA;EACAC,QAAA;IACA,GAAAX,QAAA;IACAY,WAAA;MACAC,OAAA,CAAAC,GAAA,MAAAC,aAAA;MACA,SAAAA,aAAA,CAAAC,GAAA,MAAAC,MAAA;QACA;MACA;MACA,SAAAA,MAAA,mBAAAA,MAAA,oCAAAA,MAAA;QACA;MACA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACA,GAAAnB,UAAA;IACAoB,YAAA;MACA,SAAAC,MAAA,CAAAX,IAAA;QACA,SAAAQ,MAAA,mBAAAA,MAAA,4BAAAA,MAAA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QAAA,CACA;UACA,KAAAI,QAAA;YACA,SAAAC,YAAA,CAAAC,OAAA;YAAA,gBAAAN,MAAA;YAAA,oBAAAO;UACA;QACA;MACA;IACA;IACAC,aAAA;MACA,KAAApB,WAAA;MACAqB,QAAA,CAAAC,WAAA,GAAAC,KAAA;QACA,IAAAC,MAAA,GAAA3B,CAAA,iBAAA2B,MAAA;QACA,IAAAC,KAAA,GAAA5B,CAAA,gBAAA4B,KAAA;QACA,IAAAC,CAAA,GAAAH,KAAA,CAAAI,OAAA,QAAAxB,OAAA,GAAAqB,MAAA,CAAAI,IAAA,GAAAH,KAAA;QACA,IAAAI,CAAA,GAAAN,KAAA,CAAAO,OAAA,QAAA5B,OAAA,GAAAsB,MAAA,CAAAO,GAAA;QACA,KAAA9B,YAAA,WAAAyB,CAAA;QACA,KAAAzB,YAAA,UAAA4B,CAAA;MACA;IACA;IACAG,YAAA;MACA,KAAAhC,WAAA;MACAqB,QAAA,CAAAC,WAAA;QACA;MACA;IACA;IACAW,aAAA;MACA,KAAAC,SAAA;QACA,IAAAH,GAAA,GAAAV,QAAA,CAAAc,IAAA,CAAAC,SAAA,IAAAf,QAAA,CAAAgB,eAAA,CAAAD,SAAA,IAAAE,MAAA,CAAAC,WAAA;QACA,IAAAX,IAAA,GAAAP,QAAA,CAAAc,IAAA,CAAAK,UAAA,IAAAnB,QAAA,CAAAgB,eAAA,CAAAG,UAAA,IAAAF,MAAA,CAAAG,WAAA;QACA,KAAAvC,OAAA,GAAA6B,GAAA;QACA,KAAA5B,OAAA,GAAAyB,IAAA;MACA;IACA;EAEA;EACAc,QAAA;IAAA;IACAJ,MAAA,CAAAK,gBAAA,gBAAAV,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}