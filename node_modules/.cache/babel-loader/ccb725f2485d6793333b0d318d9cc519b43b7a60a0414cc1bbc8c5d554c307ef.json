{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: 'NavigationTree',\n  props: [\"navigationBooolean\"],\n  data() {},\n  methods: {\n    ...mapActions(\"grounding\", [\"getCabinetArr\"]),\n    ...mapActions(\"warehouseQuery\", [\"getTableData\"]),\n    handleNodeClick(data) {\n      if (data.mx && data.mx === \"1\" && this.navigationBooolean === \"1\") {\n        let cabinetId = data.id;\n        let pageNum = data.face;\n        this.getCabinetArr({\n          \"cabinetId\": cabinetId,\n          \"pageNum\": pageNum,\n          \"pageSelect\": 1\n        });\n      } else if (data.mx && data.mx === \"0\" && this.navigationBooolean === \"2\") {\n        if (this.$route.name !== \"details\") {\n          this.$router.push({\n            \"name\": \"details\"\n          });\n        }\n        this.getTableData(data.id);\n      } else if (data.mx && data.mx === \"1\" && this.navigationBooolean === \"2\") {\n        let cabinetId = data.id;\n        let pageNum = data.face;\n        this.getCabinetArr({\n          \"cabinetId\": cabinetId,\n          \"pageNum\": pageNum,\n          \"pageSelect\": 1\n        });\n        if (this.$route.name !== \"GroupingQuery\") {\n          this.$router.push({\n            \"name\": \"GroupingQuery\"\n          });\n        }\n      } else if (data.mx && data.mx === \"2\" && this.navigationBooolean === \"2\") {\n        if (this.$route.name !== \"warehouseQuery\") {\n          this.$router.push({\n            \"name\": \"warehouseQuery\"\n          });\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  computed: {\n    ...mapState(\"grounding\", [\"navigation\"])\n  },\n  beforeRouteLeave(to, from, next) {\n    next();\n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","props","data","methods","handleNodeClick","mx","navigationBooolean","cabinetId","id","pageNum","face","getCabinetArr","$route","$router","push","getTableData","defaultProps","children","label","computed","beforeRouteLeave","to","from","next"],"sources":["src/components/NavigationTree.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-tree  :data=\"navigation\" :props=\"defaultProps\" @node-click=\"handleNodeClick\" :highlight-current=\"true\"></el-tree>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions,mapState} from \"vuex\";\r\nexport default {\r\n    name: 'NavigationTree',\r\n    props:[\"navigationBooolean\"],\r\n    data(){\r\n    },\r\n    methods: {\r\n      ...mapActions(\"grounding\",[\"getCabinetArr\"]),\r\n      ...mapActions(\"warehouseQuery\",[\"getTableData\"]),\r\n      handleNodeClick(data) {\r\n        if(data.mx&&data.mx===\"1\"&&this.navigationBooolean===\"1\"){\r\n          let cabinetId = data.id;\r\n          let pageNum = data.face;\r\n          this.getCabinetArr({\r\n            \"cabinetId\":cabinetId,\"pageNum\":pageNum,\"pageSelect\":1\r\n          });\r\n        } else if(data.mx&&data.mx===\"0\"&&this.navigationBooolean ===\"2\"){\r\n          if(this.$route.name !==\"details\"){\r\n            this.$router.push({\"name\":\"details\"});\r\n          }\r\n          this.getTableData(data.id);\r\n        } else if(data.mx&&data.mx===\"1\"&&this.navigationBooolean ===\"2\"){\r\n          let cabinetId = data.id;\r\n          let pageNum = data.face;\r\n          this.getCabinetArr({\r\n            \"cabinetId\":cabinetId,\"pageNum\":pageNum,\"pageSelect\":1\r\n          });\r\n          if(this.$route.name !==\"GroupingQuery\"){\r\n            this.$router.push({\"name\":\"GroupingQuery\"});\r\n          }\r\n        } else if(data.mx&&data.mx===\"2\"&&this.navigationBooolean ===\"2\"){\r\n          if(this.$route.name !==\"warehouseQuery\"){\r\n            this.$router.push({\"name\":\"warehouseQuery\"});\r\n          }\r\n        }\r\n      }\r\n    },\r\n    data(){\r\n    return {\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name',\r\n      },\r\n    }\r\n  },\r\n  computed:{\r\n    ...mapState(\"grounding\",[\"navigation\"])\r\n  },\r\n  beforeRouteLeave(to,from,next){\r\n        \r\n        next();\r\n    },\r\n  };\r\n\r\n</script>\r\n\r\n<style lang=\"css\">\r\n.el-tree-node__content{\r\n  font-size: 18px;\r\n}\r\n.el-tree--highlight-current .el-tree-node.is-current>.el-tree-node__content{\r\n  background-color: rgb(152, 179, 179);\r\n}\r\n.el-tree-node__content:hover{\r\n  background-color: rgb(152, 179, 179);\r\n}\r\n</style>"],"mappings":";AAOA,SAAAA,UAAA,EAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;EACAC,KAAA,GACA;EACAC,OAAA;IACA,GAAAL,UAAA;IACA,GAAAA,UAAA;IACAM,gBAAAF,IAAA;MACA,IAAAA,IAAA,CAAAG,EAAA,IAAAH,IAAA,CAAAG,EAAA,iBAAAC,kBAAA;QACA,IAAAC,SAAA,GAAAL,IAAA,CAAAM,EAAA;QACA,IAAAC,OAAA,GAAAP,IAAA,CAAAQ,IAAA;QACA,KAAAC,aAAA;UACA,aAAAJ,SAAA;UAAA,WAAAE,OAAA;UAAA;QACA;MACA,WAAAP,IAAA,CAAAG,EAAA,IAAAH,IAAA,CAAAG,EAAA,iBAAAC,kBAAA;QACA,SAAAM,MAAA,CAAAZ,IAAA;UACA,KAAAa,OAAA,CAAAC,IAAA;YAAA;UAAA;QACA;QACA,KAAAC,YAAA,CAAAb,IAAA,CAAAM,EAAA;MACA,WAAAN,IAAA,CAAAG,EAAA,IAAAH,IAAA,CAAAG,EAAA,iBAAAC,kBAAA;QACA,IAAAC,SAAA,GAAAL,IAAA,CAAAM,EAAA;QACA,IAAAC,OAAA,GAAAP,IAAA,CAAAQ,IAAA;QACA,KAAAC,aAAA;UACA,aAAAJ,SAAA;UAAA,WAAAE,OAAA;UAAA;QACA;QACA,SAAAG,MAAA,CAAAZ,IAAA;UACA,KAAAa,OAAA,CAAAC,IAAA;YAAA;UAAA;QACA;MACA,WAAAZ,IAAA,CAAAG,EAAA,IAAAH,IAAA,CAAAG,EAAA,iBAAAC,kBAAA;QACA,SAAAM,MAAA,CAAAZ,IAAA;UACA,KAAAa,OAAA,CAAAC,IAAA;YAAA;UAAA;QACA;MACA;IACA;EACA;EACAZ,KAAA;IACA;MACAc,YAAA;QACAC,QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,GAAApB,QAAA;EACA;EACAqB,iBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IAEAA,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}