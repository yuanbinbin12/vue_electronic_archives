{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\n// import $ from \"jquery\";\nexport default {\n  namespaced: true,\n  mutations: {\n    setQRCodeIdArr(state, idArr) {\n      state.QRCodeIdArr = idArr;\n    },\n    setQrCodePictureArr(state, picture) {\n      state.QrCodePictureArr.push(picture);\n    },\n    clearQrCodePictureArr(state) {\n      if (state.QrCodePictureArr.length > 0) {\n        while (state.QrCodePictureArr.pop()) {}\n      }\n    },\n    clearQRCodeIdArr(state) {\n      if (state.QRCodeIdArr.length > 0) {\n        while (state.QRCodeIdArr.pop()) {}\n      }\n    },\n    setLoadLoading(state, boolean) {\n      state.loadLoading = boolean;\n    }\n  },\n  actions: {\n    async getQRCodePictureArr(context, vc) {\n      if (vc.$route.name !== \"ImgPicture\") {\n        vc.$router.push({\n          name: \"ImgPicture\"\n        });\n        context.commit(\"setLoadLoading\", true);\n      }\n      context.commit(\"clearQrCodePictureArr\");\n      if (context.state.QRCodeIdArr === null || context.state.QRCodeIdArr === \"\" || context.state.QRCodeIdArr.length === 0) {\n        context.commit(\"grounding/setWarningMsg\", {\n          message: \"请选择一条数据后再点击生成二维码！\",\n          type: \"error\"\n        }, {\n          root: true\n        });\n        return;\n      }\n      var codeIdSum = 0;\n      var codeIdList = [];\n      var index = 0;\n      var lengthCodeId = context.state.QRCodeIdArr.length;\n      for (const item in context.state.QRCodeIdArr) {\n        console.log(\"item\", item);\n        codeIdList.push(context.state.QRCodeIdArr[item].cabinetName);\n        codeIdSum++;\n        if (codeIdSum % 4 === 0) {\n          index++;\n          await getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`, \"1000px\", index);\n          codeIdList = [];\n          codeIdSum = 0;\n        }\n      }\n      if (codeIdList.length > 0) {\n        index++;\n        await getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`, `${codeIdList.length * 250}px`, index);\n      }\n      context.commit(\"clearQRCodeIdArr\");\n      async function getAsyncAxios(url, height, index) {\n        var axiosRespone = axios.get(url, {\n          responseType: \"blob\"\n        });\n        await axiosRespone.then(Response => {\n          const blob = new Blob([Response.data], {\n            type: Response.data.type\n          });\n          const imageUrl = URL.createObjectURL(blob);\n          context.commit(\"setQrCodePictureArr\", {\n            imageUrl,\n            height,\n            index\n          });\n          if (Math.round(lengthCodeId / 4) === index) {\n            context.commit(\"setLoadLoading\", false);\n          }\n        });\n        // $.get({\n        //     url,\n        //     responseType:'blob',\n        //     async:false,\n        //     success(data){\n        //     const blob = new Blob([data], { type: \"image/png\" });\n        //     const imageUrl = URL.createObjectURL(blob);\n        //     context.commit(\"setQrCodePictureArr\",{imageUrl,height});\n        //     }\n        // })\n      }\n    }\n  },\n\n  state: {\n    QRCodeIdArr: [],\n    QrCodePictureArr: [],\n    loadLoading: false\n  }\n};","map":{"version":3,"names":["axios","namespaced","mutations","setQRCodeIdArr","state","idArr","QRCodeIdArr","setQrCodePictureArr","picture","QrCodePictureArr","push","clearQrCodePictureArr","length","pop","clearQRCodeIdArr","setLoadLoading","boolean","loadLoading","actions","getQRCodePictureArr","context","vc","$route","name","$router","commit","message","type","root","codeIdSum","codeIdList","index","lengthCodeId","item","console","log","cabinetName","getAsyncAxios","join","url","height","axiosRespone","get","responseType","then","Response","blob","Blob","data","imageUrl","URL","createObjectURL","Math","round"],"sources":["C:/Users/ainizuofurong/Desktop/vue_electronic_archives/src/store/QRcode.js"],"sourcesContent":["import axios from \"axios\";\r\n// import $ from \"jquery\";\r\nexport default {\r\n  namespaced: true,\r\n  mutations: {\r\n    setQRCodeIdArr(state, idArr) {\r\n      state.QRCodeIdArr = idArr;\r\n    },\r\n    setQrCodePictureArr(state, picture) {\r\n      state.QrCodePictureArr.push(picture);\r\n    },\r\n    clearQrCodePictureArr(state) {\r\n      if (state.QrCodePictureArr.length > 0) {\r\n        while (state.QrCodePictureArr.pop()) {}\r\n      }\r\n    },\r\n    clearQRCodeIdArr(state) {\r\n      if (state.QRCodeIdArr.length > 0) {\r\n        while (state.QRCodeIdArr.pop()) {}\r\n      }\r\n    },\r\n    setLoadLoading(state,boolean){\r\n        state.loadLoading = boolean;\r\n    }\r\n  },\r\n  actions: {\r\n    async getQRCodePictureArr(context, vc) {\r\n        if (vc.$route.name !== \"ImgPicture\") {\r\n            vc.$router.push({ name: \"ImgPicture\"});\r\n            context.commit(\"setLoadLoading\",true);\r\n        }\r\n        context.commit(\"clearQrCodePictureArr\");\r\n        if (\r\n            context.state.QRCodeIdArr === null ||\r\n            context.state.QRCodeIdArr === \"\" ||\r\n            context.state.QRCodeIdArr.length === 0\r\n        ) {\r\n            context.commit(\r\n            \"grounding/setWarningMsg\",\r\n            { message: \"请选择一条数据后再点击生成二维码！\", type: \"error\" },\r\n            { root: true }\r\n            );\r\n            return;\r\n        }\r\n        var codeIdSum = 0;\r\n        var codeIdList = [];\r\n        var index = 0;\r\n        var lengthCodeId  = context.state.QRCodeIdArr.length;\r\n        for (const item in context.state.QRCodeIdArr) {\r\n            console.log(\"item\",item)\r\n            codeIdList.push(context.state.QRCodeIdArr[item].cabinetName);\r\n            codeIdSum++;\r\n            if (codeIdSum % 4 === 0) {\r\n            index++;\r\n            await getAsyncAxios(\r\n                `/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`,\r\n                \"1000px\",\r\n                index\r\n            );\r\n            codeIdList = [];\r\n            codeIdSum = 0;\r\n            }\r\n        }\r\n        if (codeIdList.length > 0) {\r\n            index++;\r\n            await getAsyncAxios(\r\n            `/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`,\r\n            `${codeIdList.length * 250}px`,\r\n            index\r\n            );\r\n        }\r\n        context.commit(\"clearQRCodeIdArr\");\r\n        async function getAsyncAxios(url, height, index) {\r\n            var axiosRespone = axios.get(url, {\r\n            responseType: \"blob\",\r\n            });\r\n            await axiosRespone.then((Response) => {\r\n            const blob = new Blob([Response.data], { type: Response.data.type });\r\n            const imageUrl = URL.createObjectURL(blob);\r\n            context.commit(\"setQrCodePictureArr\", { imageUrl, height, index });\r\n            if(Math.round(lengthCodeId/4)===index){\r\n                context.commit(\"setLoadLoading\",false);\r\n            }\r\n            });\r\n            // $.get({\r\n            //     url,\r\n            //     responseType:'blob',\r\n            //     async:false,\r\n            //     success(data){\r\n            //     const blob = new Blob([data], { type: \"image/png\" });\r\n            //     const imageUrl = URL.createObjectURL(blob);\r\n            //     context.commit(\"setQrCodePictureArr\",{imageUrl,height});\r\n            //     }\r\n            // })\r\n      }\r\n    },\r\n  },\r\n  state: {\r\n    QRCodeIdArr: [],\r\n    QrCodePictureArr: [],\r\n    loadLoading:false\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}