{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\n// import $ from \"jquery\";\nexport default {\n  namespaced: true,\n  mutations: {\n    setQRCodeIdArr(state, idArr) {\n      state.QRCodeIdArr = idArr;\n    },\n    setQrCodePictureArr(state, picture) {\n      state.QrCodePictureArr.push(picture);\n    },\n    clearQrCodePictureArr(state) {\n      if (state.QrCodePictureArr.length > 0) {\n        while (state.QrCodePictureArr.pop()) {}\n      }\n    },\n    clearQRCodeIdArr(state) {\n      if (state.QRCodeIdArr.length > 0) {\n        while (state.QRCodeIdArr.pop()) {}\n      }\n    },\n    sortQrCodePictureArr(state) {\n      var QrCodePictureArr = JSON.parse(JSON.stringify(state.QrCodePictureArr));\n      console.log(QrCodePictureArr);\n      for (var i = 1; i < QrCodePictureArr.length; i++) {\n        for (var j = 0; j < arr.length - i; j++) {\n          if (QrCodePictureArr[j][index] > QrCodePictureArr[j + 1][index]) {\n            var temp = QrCodePictureArr[j]; //定义一个临时变量temp\n            QrCodePictureArr[j] = QrCodePictureArr[j + 1];\n            QrCodePictureArr[j + 1] = temp;\n          }\n        }\n      }\n      console.log(QrCodePictureArr);\n    }\n  },\n  actions: {\n    getQRCodePictureArr(context, vc) {\n      context.commit(\"clearQrCodePictureArr\");\n      if (context.state.QRCodeIdArr === null || context.state.QRCodeIdArr === \"\" || context.state.QRCodeIdArr.length === 0) {\n        context.commit(\"grounding/setWarningMsg\", {\n          \"message\": \"请选择一条数据后再点击生成二维码！\",\n          \"type\": \"error\"\n        }, {\n          root: true\n        });\n        return;\n      }\n      var codeIdSum = 0;\n      var codeIdList = [];\n      var index = 0;\n      context.state.QRCodeIdArr.forEach(codeIdMap => {\n        codeIdList.push(codeIdMap.cabinetName);\n        codeIdSum++;\n        if (codeIdSum % 4 === 0) {\n          index++;\n          getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`, \"1000px\", index);\n          codeIdList = [];\n          codeIdSum = 0;\n        }\n      });\n      if (codeIdList.length > 0) {\n        index++;\n        getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`, `${codeIdList.length * 250}px`, index);\n      }\n      if (vc.$route.name !== \"ImgPicture\") {\n        vc.$router.push({\n          \"name\": \"ImgPicture\"\n        });\n        context.commit(\"clearQRCodeIdArr\");\n      }\n      function getAsyncAxios(url, height, index) {\n        var axiosRespone = axios.get(url, {\n          responseType: 'blob'\n        });\n        axiosRespone.then(Response => {\n          const blob = new Blob([Response.data], {\n            type: Response.data.type\n          });\n          const imageUrl = URL.createObjectURL(blob);\n          context.commit(\"setQrCodePictureArr\", {\n            imageUrl,\n            height,\n            index\n          });\n        });\n        // $.get({\n        //     url,\n        //     responseType:'blob',\n        //     async:false,\n        //     success(data){\n        //     const blob = new Blob([data], { type: \"image/png\" });\n        //     const imageUrl = URL.createObjectURL(blob);\n        //     context.commit(\"setQrCodePictureArr\",{imageUrl,height});\n        //     }\n        // })\n      }\n    }\n  },\n\n  state: {\n    QRCodeIdArr: [],\n    QrCodePictureArr: []\n  }\n};","map":{"version":3,"names":["axios","namespaced","mutations","setQRCodeIdArr","state","idArr","QRCodeIdArr","setQrCodePictureArr","picture","QrCodePictureArr","push","clearQrCodePictureArr","length","pop","clearQRCodeIdArr","sortQrCodePictureArr","JSON","parse","stringify","console","log","i","j","arr","index","temp","actions","getQRCodePictureArr","context","vc","commit","root","codeIdSum","codeIdList","forEach","codeIdMap","cabinetName","getAsyncAxios","join","$route","name","$router","url","height","axiosRespone","get","responseType","then","Response","blob","Blob","data","type","imageUrl","URL","createObjectURL"],"sources":["C:/Users/ainizuofurong/Desktop/vue_electronic_archives/src/store/QRcode.js"],"sourcesContent":["import axios from \"axios\";\r\n// import $ from \"jquery\";\r\nexport default {\r\n    namespaced:true,\r\n    mutations:{\r\n        setQRCodeIdArr(state,idArr){\r\n            state.QRCodeIdArr = idArr;\r\n        },\r\n        setQrCodePictureArr(state,picture){\r\n            state.QrCodePictureArr.push(picture);\r\n        },\r\n        clearQrCodePictureArr(state){\r\n            if(state.QrCodePictureArr.length>0){\r\n                while(state.QrCodePictureArr.pop()){}\r\n            }\r\n        },\r\n        clearQRCodeIdArr(state){\r\n            if(state.QRCodeIdArr.length>0){\r\n                while(state.QRCodeIdArr.pop()){}\r\n            }\r\n        },\r\n        sortQrCodePictureArr(state){\r\n            var QrCodePictureArr = JSON.parse(JSON.stringify(state.QrCodePictureArr));\r\n            console.log(QrCodePictureArr);\r\n            for (var i = 1; i < QrCodePictureArr.length; i++) {\r\n                for (var j = 0; j < arr.length - i; j++) {\r\n                    if (QrCodePictureArr[j][index] > QrCodePictureArr[j + 1][index]) {\r\n                        var temp = QrCodePictureArr[j];      //定义一个临时变量temp\r\n                        QrCodePictureArr[j] = QrCodePictureArr[j + 1];\r\n                        QrCodePictureArr[j + 1] = temp;\r\n                    }\r\n                }\r\n            }\r\n            console.log(QrCodePictureArr);\r\n        }\r\n    },\r\n    actions:{\r\n       getQRCodePictureArr(context,vc){\r\n        context.commit(\"clearQrCodePictureArr\");\r\n        if(context.state.QRCodeIdArr===null || context.state.QRCodeIdArr === \"\" || context.state.QRCodeIdArr.length===0){\r\n            context.commit(\"grounding/setWarningMsg\",{\"message\":\"请选择一条数据后再点击生成二维码！\",\"type\":\"error\"},{root:true});\r\n            return;\r\n        }\r\n        var codeIdSum = 0;\r\n        var codeIdList = [];\r\n        var index = 0;\r\n        context.state.QRCodeIdArr.forEach(codeIdMap => {\r\n            codeIdList.push(codeIdMap.cabinetName);\r\n            codeIdSum++;\r\n            if(codeIdSum%4===0){\r\n                index++;\r\n                getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`,\"1000px\",index);\r\n                codeIdList = [];\r\n                codeIdSum = 0;\r\n            }\r\n        });\r\n        if(codeIdList.length>0){\r\n            index++;\r\n            getAsyncAxios(`/OSPApplication/general/generateQRCode/${codeIdList.join(\",\")}`,`${(codeIdList.length*250)}px`,index);\r\n        }\r\n        if(vc.$route.name !==\"ImgPicture\"){\r\n            vc.$router.push({\"name\":\"ImgPicture\"});\r\n            context.commit(\"clearQRCodeIdArr\");\r\n          }\r\n        function getAsyncAxios(url,height,index){\r\n            var axiosRespone = axios.get(url,{\r\n                responseType: 'blob',\r\n            });\r\n             axiosRespone.then(Response=>{\r\n                const blob = new Blob([Response.data], { type: Response.data.type });\r\n                const imageUrl = URL.createObjectURL(blob);\r\n                context.commit(\"setQrCodePictureArr\",{imageUrl,height,index});\r\n        });\r\n        // $.get({\r\n        //     url,\r\n        //     responseType:'blob',\r\n        //     async:false,\r\n        //     success(data){\r\n        //     const blob = new Blob([data], { type: \"image/png\" });\r\n        //     const imageUrl = URL.createObjectURL(blob);\r\n        //     context.commit(\"setQrCodePictureArr\",{imageUrl,height});\r\n        //     }\r\n        // })\r\n        }\r\n       }\r\n    },\r\n    state:{\r\n       QRCodeIdArr:[],\r\n       QrCodePictureArr:[]\r\n    }\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,eAAe;EACXC,UAAU,EAAC,IAAI;EACfC,SAAS,EAAC;IACNC,cAAcA,CAACC,KAAK,EAACC,KAAK,EAAC;MACvBD,KAAK,CAACE,WAAW,GAAGD,KAAK;IAC7B,CAAC;IACDE,mBAAmBA,CAACH,KAAK,EAACI,OAAO,EAAC;MAC9BJ,KAAK,CAACK,gBAAgB,CAACC,IAAI,CAACF,OAAO,CAAC;IACxC,CAAC;IACDG,qBAAqBA,CAACP,KAAK,EAAC;MACxB,IAAGA,KAAK,CAACK,gBAAgB,CAACG,MAAM,GAAC,CAAC,EAAC;QAC/B,OAAMR,KAAK,CAACK,gBAAgB,CAACI,GAAG,CAAC,CAAC,EAAC,CAAC;MACxC;IACJ,CAAC;IACDC,gBAAgBA,CAACV,KAAK,EAAC;MACnB,IAAGA,KAAK,CAACE,WAAW,CAACM,MAAM,GAAC,CAAC,EAAC;QAC1B,OAAMR,KAAK,CAACE,WAAW,CAACO,GAAG,CAAC,CAAC,EAAC,CAAC;MACnC;IACJ,CAAC;IACDE,oBAAoBA,CAACX,KAAK,EAAC;MACvB,IAAIK,gBAAgB,GAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACd,KAAK,CAACK,gBAAgB,CAAC,CAAC;MACzEU,OAAO,CAACC,GAAG,CAACX,gBAAgB,CAAC;MAC7B,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,gBAAgB,CAACG,MAAM,EAAES,CAAC,EAAE,EAAE;QAC9C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,GAAG,CAACX,MAAM,GAAGS,CAAC,EAAEC,CAAC,EAAE,EAAE;UACrC,IAAIb,gBAAgB,CAACa,CAAC,CAAC,CAACE,KAAK,CAAC,GAAGf,gBAAgB,CAACa,CAAC,GAAG,CAAC,CAAC,CAACE,KAAK,CAAC,EAAE;YAC7D,IAAIC,IAAI,GAAGhB,gBAAgB,CAACa,CAAC,CAAC,CAAC,CAAM;YACrCb,gBAAgB,CAACa,CAAC,CAAC,GAAGb,gBAAgB,CAACa,CAAC,GAAG,CAAC,CAAC;YAC7Cb,gBAAgB,CAACa,CAAC,GAAG,CAAC,CAAC,GAAGG,IAAI;UAClC;QACJ;MACJ;MACAN,OAAO,CAACC,GAAG,CAACX,gBAAgB,CAAC;IACjC;EACJ,CAAC;EACDiB,OAAO,EAAC;IACLC,mBAAmBA,CAACC,OAAO,EAACC,EAAE,EAAC;MAC9BD,OAAO,CAACE,MAAM,CAAC,uBAAuB,CAAC;MACvC,IAAGF,OAAO,CAACxB,KAAK,CAACE,WAAW,KAAG,IAAI,IAAIsB,OAAO,CAACxB,KAAK,CAACE,WAAW,KAAK,EAAE,IAAIsB,OAAO,CAACxB,KAAK,CAACE,WAAW,CAACM,MAAM,KAAG,CAAC,EAAC;QAC5GgB,OAAO,CAACE,MAAM,CAAC,yBAAyB,EAAC;UAAC,SAAS,EAAC,mBAAmB;UAAC,MAAM,EAAC;QAAO,CAAC,EAAC;UAACC,IAAI,EAAC;QAAI,CAAC,CAAC;QACpG;MACJ;MACA,IAAIC,SAAS,GAAG,CAAC;MACjB,IAAIC,UAAU,GAAG,EAAE;MACnB,IAAIT,KAAK,GAAG,CAAC;MACbI,OAAO,CAACxB,KAAK,CAACE,WAAW,CAAC4B,OAAO,CAACC,SAAS,IAAI;QAC3CF,UAAU,CAACvB,IAAI,CAACyB,SAAS,CAACC,WAAW,CAAC;QACtCJ,SAAS,EAAE;QACX,IAAGA,SAAS,GAAC,CAAC,KAAG,CAAC,EAAC;UACfR,KAAK,EAAE;UACPa,aAAa,CAAE,0CAAyCJ,UAAU,CAACK,IAAI,CAAC,GAAG,CAAE,EAAC,EAAC,QAAQ,EAACd,KAAK,CAAC;UAC9FS,UAAU,GAAG,EAAE;UACfD,SAAS,GAAG,CAAC;QACjB;MACJ,CAAC,CAAC;MACF,IAAGC,UAAU,CAACrB,MAAM,GAAC,CAAC,EAAC;QACnBY,KAAK,EAAE;QACPa,aAAa,CAAE,0CAAyCJ,UAAU,CAACK,IAAI,CAAC,GAAG,CAAE,EAAC,EAAE,GAAGL,UAAU,CAACrB,MAAM,GAAC,GAAK,IAAG,EAACY,KAAK,CAAC;MACxH;MACA,IAAGK,EAAE,CAACU,MAAM,CAACC,IAAI,KAAI,YAAY,EAAC;QAC9BX,EAAE,CAACY,OAAO,CAAC/B,IAAI,CAAC;UAAC,MAAM,EAAC;QAAY,CAAC,CAAC;QACtCkB,OAAO,CAACE,MAAM,CAAC,kBAAkB,CAAC;MACpC;MACF,SAASO,aAAaA,CAACK,GAAG,EAACC,MAAM,EAACnB,KAAK,EAAC;QACpC,IAAIoB,YAAY,GAAG5C,KAAK,CAAC6C,GAAG,CAACH,GAAG,EAAC;UAC7BI,YAAY,EAAE;QAClB,CAAC,CAAC;QACDF,YAAY,CAACG,IAAI,CAACC,QAAQ,IAAE;UACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;YAAEC,IAAI,EAAEJ,QAAQ,CAACG,IAAI,CAACC;UAAK,CAAC,CAAC;UACpE,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;UAC1CrB,OAAO,CAACE,MAAM,CAAC,qBAAqB,EAAC;YAACuB,QAAQ;YAACV,MAAM;YAACnB;UAAK,CAAC,CAAC;QACrE,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACD;EACH,CAAC;;EACDpB,KAAK,EAAC;IACHE,WAAW,EAAC,EAAE;IACdG,gBAAgB,EAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}